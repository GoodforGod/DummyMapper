plugins {
    id "jacoco"
    id "java-library"
    id "maven-publish"

    id "org.jetbrains.intellij" version "1.9.0"
    id "org.sonarqube" version "3.3"
    id "com.diffplug.spotless" version "6.1.0"
}

repositories {
    mavenLocal()
    mavenCentral()
}

group = groupId
version = artifactVersion

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

intellij {
    plugins = ["java", "Kotlin"]
    version = "2022.2"
    downloadSources = false
}

runIde {
    autoReloadPlugins = true
}

patchPluginXml {
    sinceBuild = "202"
}

spotless {
    java {
        encoding("UTF-8")
        importOrder()
        removeUnusedImports()
        eclipse("4.21.0").configFile("${rootDir}/config/codestyle.xml")
    }
}

sonarqube {
    properties {
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.organization", "goodforgod"
        property "sonar.projectKey", "GoodforGod_DummyMapper"
    }
}

configurations {
    all {
        exclude module: "slf4j-api"
        resolutionStrategy {
            force "com.fasterxml.jackson.core:jackson-core:$jacksonVersion"
            force "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
            force "com.fasterxml.jackson.core:jackson-annotations:$jacksonVersion"
            force "com.fasterxml.jackson.dataformat:jackson-dataformat-avro:$jacksonVersion"
            force "com.fasterxml.jackson.datatype:jackson-datatype-jdk8:$jacksonVersion"
            force "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jacksonVersion"
            force "com.fasterxml.jackson.module:jackson-module-parameter-names:$jacksonVersion"
        }
    }
}

dependencies {
    implementation "com.github.goodforgod:dummymaker:3.3.0"
    implementation "org.javassist:javassist:3.29.2-GA"
    implementation "io.goodforgod:jackson-datetime-configuration:1.0.0"

    implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-avro:$jacksonVersion"
    implementation "com.github.victools:jsonschema-generator:4.27.0"
    implementation "org.apache.avro:avro-compiler:1.9.2"
    implementation "io.leangen.graphql:spqr:0.11.2"
}

test {
    useJUnitPlatform()
    testLogging {
        events("passed", "skipped", "failed")
        exceptionFormat("full")
        showStandardStreams(false)
    }

    reports {
        html.enabled(false)
        junitXml.enabled(false)
    }
}

tasks.withType(JavaCompile) {
    options.encoding("UTF-8")
    options.incremental(true)
    options.fork = true
}

check.dependsOn jacocoTestReport
jacocoTestReport {
    reports {
        xml.enabled true
        html.destination file("${buildDir}/jacocoHtml")
    }
}

javadoc {
    options.encoding = "UTF-8"
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption("html5", true)
    }
}